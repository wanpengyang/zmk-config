/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layers

#define QX_M    0       // Main
#define QX_L    1       // Lower
#define QX_R    2       // Raise
#define QX_A    3       // Adjust
#define QW_M    4       // Main
#define QW_L    5       // Lower
#define QW_R    6       // Raise
#define QW_A    7       // Adjust
#define QC_N    8       // Number Pad
#define QC_F    9       // Firmware

// Short versions
// Screen Shot

#define WIN_SC  LG(LS(S))
#define OSX_SC  LG(LS(N4))

// move window with Rectangle app's shortcuts

#define MV_L    LC(LA(LEFT))
#define MV_R    LC(LA(RIGHT))
#define MV_M    LC(LA(RET))
#define MV_LW    LG(LC(LA(LEFT)))
#define MV_RW    LG(LC(LA(RIGHT)))

// all the command keys combos

#define K_C    LG(C)
#define K_V    LG(V)
#define K_X    LG(X)
#define K_Z    LG(Z)
#define K_F    LG(F)
#define K_B      LG(B)
#define K_K      LG(K)
#define K_SA     LG(A)
#define K_SAV    LG(S)
#define K_CW     LG(W)
#define K_P      LG(LS(P))

// AltTab specific shortcuts
// switch to other apps

#define S_APP    LA(TAB)

// switch to other windows of the same app

#define S_WIN    LA(GRAVE)
#define BT0     BT_SEL 0
#define BT1     BT_SEL 1
#define BT2     BT_SEL 2
#define BT3     BT_SEL 3
#define BT4     BT_SEL 4
#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE

/* 
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */

nice_view_spi: &spi0 {
    //	compatible = "nordic,nrf-spim";
    //	pinctrl-0 = <&spi0_default>;
    //	pinctrl-1 = <&spi0_sleep>;
    //	pinctrl-names = "default", "sleep";

    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_win_layer {
            if-layers = <5 6>;
            then-layer = <7>;
        };

        adjust_osx_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_quit_app_win {
            timeout-ms = <50>;
            key-positions = <13 14>;
            layers = <QW_M>;
            bindings = <&kp LA(F4)>;
        };

        // D+F becomes Left Shift

        combo_lshift {
            timeout-ms = <50>;
            key-positions = <27 28>;
            layers = <QX_M>;
            bindings = <&kp LSHFT>;
        };

        // J+K becomes right shift

        combo_rshift {
            timeout-ms = <50>;
            key-positions = <31 32>;
            layers = <QX_M>;
            bindings = <&kp RSHFT>;
        };
    };

    macros {
        CLANG: CLANG {
            label = "Lang";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    behaviors {
        tdw_Q: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_QUIT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp Q>,
                <&kp LA(F4)>;
        };
        tdx_Q: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "OSX_QUIT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp Q>,
                <&kp LG(Q)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_mac_layer {
            label = " MAC";
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                        &kp N6       &kp N7         &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB         &tdx_Q  &kp W   &kp E     &kp R     &kp T                                         &kp Y        &kp U          &kp I      &kp O    &kp P     &kp BSLH
&kp GRAVE       &kp A   &kp S   &kp D     &kp F     &kp G                                         &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT CAPS  &kp Z   &kp X   &kp C     &kp V     &kp B      &mo 8        &mt LCTRL UNDERSCORE  &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                &kp LALT  &kp LGUI  &lt 1 RET  &lt 2 MINUS  &lt 2 EQUAL           &lt 1 SPACE  &mt RALT BSPC  &mo 9
            >;
        };

        lower_mac_layer {
            label = " Lower";
            bindings = <
&trans  &trans    &trans  &trans     &trans            &trans                                        &trans                &trans                 &trans    &trans    &kp MINUS  &kp PLUS
&trans  &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR        &kp PERCENT                                   &kp CARET             &kp AMPS               &kp STAR  &kp LPAR  &kp RPAR   &kp RPAR
&trans  &trans    &trans  &trans     &trans            &trans                                        &kp LBRC              &kp RBRC               &kp LBKT  &kp RBKT  &kp COLON  &kp DQT
&trans  &trans    &trans  &trans     &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))  &kp LC(LA(RET))  &trans    &kp LG(LC(LA(LEFT)))  &kp LG(LC(LA(RIGHT)))  &kp LT    &kp GT    &trans     &trans
                          &trans     &trans            &trans             &kp UNDER        &kp PLUS  &trans                &trans                 &trans
            >;
        };

        raise_mac_layer {
            label = " Raise";
            bindings = <
&trans  &trans     &trans     &trans     &kp LG(LS(N4))  &trans                        &trans     &trans    &trans    &trans     &trans         &trans
&trans  &trans     &kp LG(W)  &trans     &trans          &trans                        &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp LG(LS(P))  &trans
&trans  &kp LG(A)  &kp LG(S)  &trans     &kp LG(F)       &trans                        &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans         &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)       &kp LG(B)  &kp LG(K)  &trans  &trans     &trans    &trans    &trans     &trans         &trans
                              &trans     &trans          &trans     &trans     &trans  &trans     &kp DEL   &trans
            >;
        };

        adjust_mac_layer {
            label = " Adjust";
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7     &kp F8     &kp F9  &kp F10  &kp F11
&trans  &none   &none   &none   &none   &none                   &none   &none      &kp VOLUP  &none   &none    &kp F12
&trans  &none   &none   &none   &none   &none                   &none   &none      &kp VOLDN  &none   &none    &none
&trans  &none   &none   &none   &none   &none   &trans  &trans  &none   &kp VOLMT  &none      &none   &none    &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans     &tog QW_M
            >;
        };

        default_win_layer {
            label = " WIN";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                               &kp N6       &kp N7    &kp N8     &kp N9   &kp N0    &kp BSLH
&kp TAB    &tdw_Q  &kp W   &kp E     &kp R      &kp T                                &kp Y        &kp U     &kp I      &kp O    &kp P     &kp GRAV
&kp CAPS   &kp A   &kp S   &kp D     &kp F      &kp G                                &kp H        &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V      &kp B      &mo QC_N     &kp LGUI     &kp N        &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LCTRL  &lt 5 RET  &lt 6 MINUS  &lt 6 EQUAL  &lt 5 SPACE  &kp BSPC  &mo QC_F
            >;
        };

        lower_win_layer {
            label = " L";
            bindings = <
&trans  &trans  &trans  &trans    &trans    &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &kp LT  &kp LPAR  &kp LBKT  &kp LBRC                  &kp RBRC  &kp RBKT  &kp RPAR  &kp GT  &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
                        &trans    &trans    &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        raise_win_layer {
            label = " R";
            bindings = <
&trans  &trans  &trans  &trans  &kp WIN_SC  &trans                  &trans     &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                  &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans     &trans    &trans    &trans     &trans  &trans
                        &trans  &trans      &trans  &trans  &trans  &trans     &kp DEL   &trans
            >;
        };

        adjust_win_layer {
            label = " A";
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                     &kp F6  &kp F7     &kp F8     &kp F9  &kp F10  &kp F11
&trans  &none   &none   &none   &none   &kp SPACE                  &none   &none      &kp VOLUP  &none   &none    &kp F12
&trans  &none   &none   &none   &none   &none                      &none   &none      &kp VOLDN  &none   &none    &none
&trans  &none   &none   &none   &none   &none      &trans  &trans  &none   &kp VOLMT  &none      &none   &none    &trans
                        &trans  &trans  &trans     &trans  &trans  &trans  &trans     &tog QW_M
            >;
        };

        numpad_layer {
            label = " NumPad";
            bindings = <
&trans  &none  &none  &none   &none   &none                   &none   &none    &kp ASTRK  &kp SLASH  &none      &none
&trans  &none  &none  &none   &none   &none                   &none   &kp N7   &kp N8     &kp N9     &kp MINUS  &none
&trans  &none  &none  &none   &none   &none                   &none   &kp N4   &kp N5     &kp N6     &kp PLUS   &none
&trans  &none  &none  &none   &none   &none   &trans  &trans  &none   &kp N1   &kp N2     &kp N3     &kp EQUAL  &trans
                      &trans  &trans  &trans  &trans  &trans  &kp N0  &kp DOT  &none
            >;
        };

        firmware_layer {
            label = " BLE";
            bindings = <
&bt BT0      &bt BT1     &bt BT2  &bt BT3     &bt BT4  &none                   &bt BT0  &bt BT1  &bt BT2     &bt BT3  &bt BT4     &none
&bootloader  &sys_reset  &none    &none       &none    &none                   &none    &none    &none       &none    &sys_reset  &bootloader
&none        &none       &none    &none       &none    &none                   &none    &none    &none       &none    &none       &none
&none        &none       &none    &bt BT_CLR  &none    &none   &trans  &trans  &none    &none    &bt BT_CLR  &none    &none       &none
                                  &none       &none    &trans  &trans  &trans  &trans   &none    &none
            >;
        };
    };
};
